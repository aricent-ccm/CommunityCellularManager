#!/usr/bin/env python3
"""Writes the versions of the main installed packages into the ConfigDB.

This runs as a postinst for the endaga metapackage.  We'll later send this info
to the cloud during checkins.

Copyright (c) 2016-present, Facebook, Inc.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree. An additional grant
of patent rights can be found in the PATENTS file in the same directory.
"""

import delegator

from core.config_database import ConfigDB
from pkg_resources import parse_version

# Hard-coded package version to simplify integration in embedded
# environment (yocto).
packages_version = {'endaga-openbts': '',
                    'endaga-osmocom': '0.8.1',
                    'freeswitch': '1.6.12+git~20170222T162745Z~b91a0a6f2b-1~jessie+1',
                    'openbts-public': '',
                    'osmo-nitb': '0.15.0-748-g61c15ff-r1.5.3',
                    'python3-endaga-core': '0.6.1',
                    'python-openbts': '',
                    'python3-osmocom': '0.1.0'}

#this should be moved to common and used in the bts classes directly
def get_version(package_name):
    """Runs opkg status to get package version info."""
    query = delegator.run("/usr/bin/opkg status %s | grep 'Version: ' | cut -d ' ' -f 2" % package_name)
    if query.return_code != 0:
        return packages_version[package_name]
    try:
        # update package version array
        # we send MAJOR.MINOR. for now
        ver =  query.out.split('+')[0]
        if ver.find('-') != -1:
            #contain '-' in version string
            ver =  query.out.split('-')[0]

        if (parse_version(ver) != parse_version('0.0.0')) :
            packages_version[package_name] = ver
        return packages_version[package_name]
    except ValueError:
        return ''

config_db = ConfigDB()
packages = [('endaga', ['endaga-openbts',
                        'endaga-osmocom']),
            ('freeswitch', ['freeswitch']),
            ('gsm', ['openbts-public',
                     'osmo-nitb']),
            ('python-endaga-core', ['python3-endaga-core']),
            ('python-gsm', ['python3-openbts',
                            'python3-osmocom']),
        ]
for package in packages:
    key = package[0]
    working_package_names = package[1]
    for name in working_package_names:
        res = get_version(name)
        if (res):
            print(key + ":" + res)
            key = '%s_version' % key
            config_db[key] = res
            break
