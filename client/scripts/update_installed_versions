#!/usr/bin/env python
"""Writes the versions of the main installed packages into the ConfigDB.

This runs as a postinst for the endaga metapackage.  We'll later send this info
to the cloud during checkins.

Copyright (c) 2016-present, Facebook, Inc.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree. An additional grant 
of patent rights can be found in the PATENTS file in the same directory.
"""

import envoy

from core.config_database import ConfigDB

# Hard-coded package version to simplify integration in embedded
# environment (yocto).
packages_version = {'endaga-openbts': '',
                    'endaga-osmocom': '0.7.12',
                    'freeswitch': '1.6.12+git~20170222T162745Z~b91a0a6f2b-1~jessie+1',
                    'openbts-public': '',
                    'osmo-nitb': '0.15.1.20170221',
                    'python-endaga-core': '0.5.11',
                    'python-openbts': '',
                    'python-osmocom': '0.0.4'}

#this should be moved to common and used in the bts classes directly
def get_version(package_name):
    """Runs opkg status to get package version info."""
    query = envoy.run("/usr/bin/opkg status %s | grep 'Version: ' | cut -d ' ' -f 2" % package_name)
    result = query.std_out.strip(' \t\n\r')
    if result :
        # update package version array
        packages_version[package_name] = result
    return packages_version[package_name]


config_db = ConfigDB()
packages = [('endaga', ['endaga-openbts',
                        'endaga-osmocom']), 
            ('freeswitch', ['freeswitch']),
            ('gsm', ['openbts-public',
                     'osmo-nitb']),
            ('python-endaga-core', ['python-endaga-core']),
            ('python-gsm', ['python-openbts',
                            'python-osmocom']),
        ]
for package in packages:
    key = package[0]
    working_package_names = package[1]
    for name in working_package_names:
        res = get_version(name)
        if (res):
            print (key + ":" + res)
            key = '%s_version' % key
            config_db[key] = res
            break


